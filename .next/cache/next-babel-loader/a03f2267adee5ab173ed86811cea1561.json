{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Konstantin/Desktop/code/woodsup_v2/pages/projects.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport styles from '../styles/projects.module.sass';\nimport projects_de from '../data/projects_de.json';\nimport { i18n, withTranslation } from '../i18n'; // import projects_en from '../data/projects_en.json'\n// import projects_es from '../data/projects_es.json'\n// import i18n from '../i18n'\n// let projectsList = projects_de.projects\n// let lang = i18n.language\n// if (lang === 'de') {\n//   projectsList = projects_de.projects;\n// }\n// else if (lang === 'en') {\n//   projectsList = projects_en.projects;\n// }\n// else if (lang === 'es') {\n//   projectsList = projects_es.projects;\n// }\n\nvar projectsList = projects_de.projects;\nvar sortedList = projectsList.sort(function (a, b) {\n  return b.id - a.id;\n});\n\nvar Projects = function Projects(_ref) {\n  _s();\n\n  var t = _ref.t,\n      props = _ref.props;\n  var router = useRouter();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.home,\n    children: sortedList.map(function (project) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: project.image ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.box,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: styles.projectImg,\n            src: project.image,\n            alt: \"Projectpicture\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.mask,\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              className: styles.link,\n              props: project,\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n                className: styles.project_title,\n                onClick: function onClick() {\n                  router.push({\n                    pathname: '/projects/[pid]',\n                    query: {\n                      pid: project.id\n                    }\n                  });\n                },\n                children: project.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 68\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 24\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 21\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 19\n        }, _this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.project_heading,\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            href: \"/projects/\".concat(project.id),\n            props: project.image,\n            replace: true,\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              className: styles.link_without_image,\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"\\u2022 \", project.title]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 63\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 22\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 19\n        }, _this)\n      }, project.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Projects, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = Projects;\nProjects.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          return _context.abrupt(\"return\", {\n            namespacesRequired: ['common']\n          });\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nProjects.propTypes = {\n  t: PropTypes.func.isRequired\n};\nexport default withTranslation('common')(Projects);\n\nvar _c;\n\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"sources":["/Users/Konstantin/Desktop/code/woodsup_v2/pages/projects.js"],"names":["PropTypes","Link","useRouter","styles","projects_de","i18n","withTranslation","projectsList","projects","sortedList","sort","a","b","id","Projects","t","props","router","home","map","project","image","box","projectImg","mask","link","project_title","push","pathname","query","pid","title","project_heading","link_without_image","getInitialProps","namespacesRequired","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types'\nimport Link from 'next/link'\nimport { useRouter } from 'next/router'\nimport styles from '../styles/projects.module.sass'\nimport projects_de from '../data/projects_de.json'\nimport { i18n, withTranslation } from '../i18n'\n\n// import projects_en from '../data/projects_en.json'\n// import projects_es from '../data/projects_es.json'\n// import i18n from '../i18n'\n\n// let projectsList = projects_de.projects\n// let lang = i18n.language\n// if (lang === 'de') {\n//   projectsList = projects_de.projects;\n// }\n// else if (lang === 'en') {\n//   projectsList = projects_en.projects;\n// }\n// else if (lang === 'es') {\n//   projectsList = projects_es.projects;\n\n// }\n\nconst projectsList = projects_de.projects;\nconst sortedList = projectsList.sort((a, b) => b.id - a.id)\nconst Projects = ({t,props}) => {\n  const router = useRouter()\n\n  return (\n    <div className={styles.home}>\n    {sortedList.map((project) => (\n      <div key={project.id}>\n                {project.image ? (\n                  <div className={styles.box}>\n                    <img\n                      className={styles.projectImg}\n                      src={project.image}\n                      alt=\"Projectpicture\"\n                    />\n                    <div className={styles.mask}>\n                      {/* <Link\n                        href={`/projects/${project.id}`}\n                        props={project}\n                      > */}\n                       <a className={styles.link} props={project}> <p className={styles.project_title} onClick={() => {\n        router.push({\n          pathname: '/projects/[pid]',\n          query: { pid: project.id },\n        })\n      }}>\n      {project.title}</p></a>\n                      {/* </Link> */}\n                    </div>\n                  </div>\n                ) : (\n                  <div className={styles.project_heading}>\n                    <Link\n                      href={`/projects/${project.id}`}\n                      props={project.image}\n                      replace\n                    >\n                     <a className={styles.link_without_image}><p>• {project.title}</p></a> \n                    </Link>\n                  </div>\n                )}\n              </div>\n                ))}\n  </div>\n)\n}\n\nProjects.getInitialProps = async () => ({\n  namespacesRequired: ['common'],\n})\n\nProjects.propTypes = {\n  t: PropTypes.func.isRequired,\n}\nexport default withTranslation('common')(Projects)\n"]},"metadata":{},"sourceType":"module"}