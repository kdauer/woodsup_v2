{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/Konstantin/Desktop/code/woodsup_v2/pages/projects.js\";\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\nimport styles from '../styles/projects.module.sass';\nimport projects_de from '../data/projects_de.json';\nimport { i18n, withTranslation } from '../i18n';\nimport projects_en from '../data/projects_en.json';\nimport projects_es from '../data/projects_es.json';\n\nconst Projects = ({\n  t,\n  props\n}) => {\n  let projectsList = projects_de.projects;\n\n  if (i18n.language === 'de') {\n    projectsList = projects_de.projects;\n  }\n\n  if (i18n.language === 'en') {\n    projectsList = projects_en.projects;\n  }\n\n  if (i18n.language === 'es') {\n    projectsList = projects_es.projects;\n  }\n\n  const sortedList = projectsList.sort((a, b) => b.id - a.id);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.home,\n    children: sortedList.map(project => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: project.image ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.box,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: styles.projectImg,\n          src: project.image,\n          alt: \"Projectpicture\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.mask,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"./projects/${project.id}\",\n            className: styles.link,\n            props: project,\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n              className: styles.project_title,\n              children: project.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 100\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.project_heading,\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          href: `/projects/${project.id}`,\n          props: project.image,\n          replace: true,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            className: styles.link_without_image,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u2022 \", project.title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 63\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 19\n      }, this)\n    }, project.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\nProjects.getInitialProps = async () => ({\n  namespacesRequired: ['common']\n});\n\nProjects.propTypes = {\n  t: PropTypes.func.isRequired\n};\nexport default withTranslation('common')(Projects);","map":{"version":3,"sources":["/Users/Konstantin/Desktop/code/woodsup_v2/pages/projects.js"],"names":["PropTypes","Link","styles","projects_de","i18n","withTranslation","projects_en","projects_es","Projects","t","props","projectsList","projects","language","sortedList","sort","a","b","id","home","map","project","image","box","projectImg","mask","link","project_title","title","project_heading","link_without_image","getInitialProps","namespacesRequired","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types'\nimport Link from 'next/link'\nimport styles from '../styles/projects.module.sass'\nimport projects_de from '../data/projects_de.json'\nimport { i18n, withTranslation } from '../i18n'\n\nimport projects_en from '../data/projects_en.json'\nimport projects_es from '../data/projects_es.json'\n\n\n\n\nconst Projects = ({t,props}) => {\n  let projectsList = projects_de.projects\n  \n  if (i18n.language === 'de') {\n    projectsList = projects_de.projects;\n  }\n  if (i18n.language === 'en') {\n    projectsList = projects_en.projects;\n  }\n  if (i18n.language === 'es') {\n    projectsList = projects_es.projects;\n  }\n  const sortedList = projectsList.sort((a, b) => b.id - a.id)\n  \n  return (\n    <div className={styles.home}>\n    {sortedList.map((project) => (\n      <div key={project.id}>\n                {project.image ? (\n                  <div className={styles.box}>\n                    <img\n                      className={styles.projectImg}\n                      src={project.image}\n                      alt=\"Projectpicture\"\n                    />\n                    <div className={styles.mask}>\n                       <a href='./projects/${project.id}' className={styles.link} props={project}> <p className={styles.project_title}>\n                        {project.title}</p>\n                       </a>\n                    </div>\n                  </div>\n                ) : (\n                  <div className={styles.project_heading}>\n                    <Link\n                      href={`/projects/${project.id}`}\n                      props={project.image}\n                      replace\n                    >\n                     <a className={styles.link_without_image}><p>â€¢ {project.title}</p></a> \n                    </Link>\n                  </div>\n                )}\n              </div>\n                ))}\n  </div>\n)\n}\n\nProjects.getInitialProps = async () => ({\n  namespacesRequired: ['common'],\n})\n\nProjects.propTypes = {\n  t: PropTypes.func.isRequired,\n}\nexport default withTranslation('common')(Projects)\n"]},"metadata":{},"sourceType":"module"}