{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/Konstantin/Desktop/code/woodsup_v2/components/projectslist.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\nimport { withTranslation } from '../i18n';\nimport styles from '../styles/projects.module.sass';\nimport ProjectsData from \"../resources/projects.js\";\nconst projects = ProjectsData;\n\nconst Projectslist = ({\n  props\n}) => {\n  return props.projects.map(project => {\n    /*#__PURE__*/\n    _jsxDEV(\"div\", _objectSpread(_objectSpread({}, pageProps), {}, {\n      children: project.image ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.box,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: styles.projectImg,\n          src: project.image,\n          alt: \"Projectpicture\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.mask,\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            href: `/projects/${project.id}`,\n            props: project.image,\n            className: \"link\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: styles.project_title,\n              children: project.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.project_heading,\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          href: `/projects/${project.id}`,\n          props: project.image,\n          className: styles.link_without_image,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u2022 \", project.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }, this)\n    }), project.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }, this);\n  });\n};\n\nexport async function getStaticProps() {\n  // Call an external API endpoint to get posts.\n  // You can use any data fetching library\n  const projects = await import('../resources/projects_backup.json'); // By returning { props: posts }, the Blog component\n  // will receive `posts` as a prop at build time\n\n  return {\n    props: {\n      projects\n    }\n  };\n}\nexport default Projectslist;","map":{"version":3,"sources":["/Users/Konstantin/Desktop/code/woodsup_v2/components/projectslist.js"],"names":["PropTypes","Link","withTranslation","styles","ProjectsData","projects","Projectslist","props","map","project","pageProps","image","box","projectImg","mask","id","project_title","title","project_heading","link_without_image","getStaticProps"],"mappings":";;;;;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,eAAT,QAAgC,SAAhC;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AAEA,MAAMC,QAAQ,GAAGD,YAAjB;;AAEA,MAAME,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAC9B,SACQA,KAAK,CAACF,QAAN,CAAeG,GAAf,CAAmBC,OAAO,IAAI;AAChC;AAAA,mDAA0BC,SAA1B;AAAA,gBACGD,OAAO,CAACE,KAAR,gBACC;AAAK,QAAA,SAAS,EAAER,MAAM,CAACS,GAAvB;AAAA,gCACE;AACE,UAAA,SAAS,EAAET,MAAM,CAACU,UADpB;AAEE,UAAA,GAAG,EAAEJ,OAAO,CAACE,KAFf;AAGE,UAAA,GAAG,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA,gBADF,eAME;AAAK,UAAA,SAAS,EAAER,MAAM,CAACW,IAAvB;AAAA,iCACE,QAAC,IAAD;AACE,YAAA,IAAI,EAAG,aAAYL,OAAO,CAACM,EAAG,EADhC;AAEE,YAAA,KAAK,EAAEN,OAAO,CAACE,KAFjB;AAGE,YAAA,SAAS,EAAC,MAHZ;AAAA,mCAKE;AAAG,cAAA,SAAS,EAAER,MAAM,CAACa,aAArB;AAAA,wBAAqCP,OAAO,CAACQ;AAA7C;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,gBAkBC;AAAK,QAAA,SAAS,EAAEd,MAAM,CAACe,eAAvB;AAAA,+BACE,QAAC,IAAD;AACE,UAAA,IAAI,EAAG,aAAYT,OAAO,CAACM,EAAG,EADhC;AAEE,UAAA,KAAK,EAAEN,OAAO,CAACE,KAFjB;AAGE,UAAA,SAAS,EAAER,MAAM,CAACgB,kBAHpB;AAAA,iCAKE;AAAA,kCAAMV,OAAO,CAACQ,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAnBJ,QAAUR,OAAO,CAACM,EAAlB;AAAA;AAAA;AAAA;AAAA;AA8BG,GA/BD,CADR;AAiCE,CAlCN;;AAoCA,OAAO,eAAeK,cAAf,GAAgC;AAC/B;AACA;AACA,QAAMf,QAAQ,GAAG,MAAM,OAAO,mCAAP,CAAvB,CAH+B,CAI/B;AACA;;AACA,SAAO;AACLE,IAAAA,KAAK,EAAE;AACLF,MAAAA;AADK;AADF,GAAP;AAKD;AACP,eAAeC,YAAf","sourcesContent":["import PropTypes from 'prop-types'\nimport Link from 'next/link'\nimport { withTranslation } from '../i18n'\nimport styles from '../styles/projects.module.sass'\nimport ProjectsData from \"../resources/projects.js\"\n\nconst projects = ProjectsData;\n\nconst Projectslist = ({props}) => {\n    return (\n            props.projects.map(project => {\n          <div key={project.id} {...pageProps}>\n            {project.image ? (\n              <div className={styles.box}>\n                <img\n                  className={styles.projectImg}\n                  src={project.image}\n                  alt=\"Projectpicture\"\n                />\n                <div className={styles.mask}>\n                  <Link\n                    href={`/projects/${project.id}`}\n                    props={project.image}\n                    className=\"link\"\n                  >\n                    <p className={styles.project_title}>{project.title}</p>\n                  </Link>\n                </div>\n              </div>\n            ) : (\n              <div className={styles.project_heading}>\n                <Link\n                  href={`/projects/${project.id}`}\n                  props={project.image}\n                  className={styles.link_without_image}\n                >\n                  <p>â€¢ {project.title}</p>\n                </Link>\n              </div>\n            )}\n          </div>\n            })\n    )}\n\nexport async function getStaticProps() {\n        // Call an external API endpoint to get posts.\n        // You can use any data fetching library\n        const projects = await import('../resources/projects_backup.json')      \n        // By returning { props: posts }, the Blog component\n        // will receive `posts` as a prop at build time\n        return {\n          props: {\n            projects,\n          },\n        }\n      }\nexport default Projectslist\n"]},"metadata":{},"sourceType":"module"}